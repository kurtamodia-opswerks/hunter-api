services:
  db:
    image: postgres:17
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: [] # override to ignore .env
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    env_file: [] # override to ignore .env
    environment:
      REDIS_URL: "${REDIS_URL}"

  web:
    build: .
    container_name: django_app
    volumes:
      - ./hunter-api:/app
    env_file: [] # override to ignore .env
    environment:
      DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
      DEBUG: "${DEBUG}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_ENGINE: "${DB_ENGINE}"
      REDIS_URL: "${REDIS_URL}"
    depends_on:
      - db
      - redis
    command: python manage.py test

  celery:
    build: .
    volumes:
      - ./hunter-api:/app
    env_file: [] # override to ignore .env
    environment:
      DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
      DEBUG: "${DEBUG}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_ENGINE: "${DB_ENGINE}"
      REDIS_URL: "${REDIS_URL}"
    depends_on:
      - db
      - redis
    command: celery -A hunter_api worker --loglevel=info

volumes:
  postgres_data:
  redis_data:
